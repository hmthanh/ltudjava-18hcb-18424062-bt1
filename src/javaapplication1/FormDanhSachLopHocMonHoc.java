/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaapplication1.Entities.SinhVien;
import javaapplication1.Extension.TxtFileNameFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Asus
 */
public class FormDanhSachLopHocMonHoc extends javax.swing.JFrame {

    /**
     * Creates new form FormDanhSachLopHocMonHoc
     */
    
      String[] columnNames = { "STT", "MSSV","Họ tên", "Gới tính","CMND" };
    public FormDanhSachLopHocMonHoc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdLopMonHoc = new javax.swing.JComboBox<>();
        txtMSSV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtGioiTinh = new javax.swing.JTextField();
        txtCMND = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSinhVienMonHoc = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        cmdLopMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLopMonHocActionPerformed(evt);
            }
        });

        jLabel1.setText("MSSV");

        jLabel2.setText("Họ Tên");

        jLabel3.setText("Giới tính");

        jLabel4.setText("CMND");

        tbSinhVienMonHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbSinhVienMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSinhVienMonHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSinhVienMonHoc);

        scrollPane1.add(jScrollPane1);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(cmdLopMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMSSV)
                    .addComponent(txtHoTen)
                    .addComponent(txtGioiTinh)
                    .addComponent(txtCMND, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                .addGap(164, 164, 164))
            .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdLopMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     void LoadDuLieuSinHVien(String[] columnNames,String lophoc)
    {
         File file = new File("");
        String currentDirectory = file.getAbsolutePath();
          List<SinhVien> listSinhVien = new ArrayList<SinhVien>();
        currentDirectory +="\\Data\\DuLieu\\DanhSachLopHocMopHoc\\" + lophoc+".txt";
        Path pathToFile = Paths.get(currentDirectory);
        String lopHoc ="";
        try (BufferedReader br = Files.newBufferedReader(pathToFile, StandardCharsets.UTF_8)) 
        {

            // read the first line from the text file
            String line = br.readLine();                                         
            while (line != null) 
            {
               
               String[] attributes = line.split("\\|");
                SinhVien sv = new SinhVien();
                if(sv.getcMND()=="")
                    continue;
                 sv = sv.ThemSinhVien(attributes);
                // adding book into ArrayList
                listSinhVien.add(sv);

                // read next line before looping
                // if end of file reached, line would be null
                line = br.readLine();
            }
            
            
            // loop until all lines are read
            

        } catch (IOException ioe) 
        {
            System.out.println("javaapplication1.formDanhSachSinhVien.formWindowOpened()");
            ioe.printStackTrace();
          
        }
        
        
        String[][] listDataSinhVien = new String[listSinhVien.size()][5];
        for(int i =0;i<listSinhVien.size();i++)
        {
              listDataSinhVien[i][0] = (i+1) + "";
              listDataSinhVien[i][1] =  listSinhVien.get(i).getmSSV();
              listDataSinhVien[i][2] =  listSinhVien.get(i).getHoTen();
              listDataSinhVien[i][3] =  listSinhVien.get(i).getGioiTinh();
              listDataSinhVien[i][4] =  listSinhVien.get(i).getcMND();
        }
        
        
        
        TableModel tablemodel = new DefaultTableModel(listDataSinhVien, columnNames);
        tbSinhVienMonHoc.setModel(tablemodel);
        
    
    }
    void  HienThiDanhSachLopLenCombobox()
    {
       
         File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\Dulieu\\DanhSachLopHocMopHoc";
        File dir = new File(currentDirectory);
 
        File[] txtFiles = dir.listFiles(new TxtFileNameFilter());
 
        for (File txtFile : txtFiles) {
             File f = new File(txtFile.getAbsolutePath());
             
            cmdLopMonHoc.addItem(f.getName().toString().replace(".txt", ""));
        }
    }
    
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        HienThiDanhSachLopLenCombobox();
        LoadDuLieuSinHVien(columnNames, cmdLopMonHoc.getSelectedItem().toString());
        
    }//GEN-LAST:event_formWindowOpened

    private void cmdLopMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLopMonHocActionPerformed
        // TODO add your handling code here:
        LoadDuLieuSinHVien(columnNames, cmdLopMonHoc.getSelectedItem().toString());
    }//GEN-LAST:event_cmdLopMonHocActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        
         List<SinhVien> listSinhVien = new ArrayList<SinhVien>();
        File file = new File("");
        String currentDirectory = file.getAbsolutePath();
        currentDirectory +="\\Data\\DuLieu\\DanhSachLopHocMopHoc\\" + cmdLopMonHoc.getSelectedItem().toString()+".txt";
        System.out.println("Current working directory : " + currentDirectory);
  BufferedReader br = null;
              try {   
            br = new BufferedReader(new FileReader(currentDirectory));       

            System.out.println("Đọc nội dung file sử dụng phương thức readLine()");

            String textInALine;
           
         
            
            while ((textInALine = br.readLine()) != null) {           
                
               
                
                String[] sinhVienTemp = textInALine.split("\\|");
                
               SinhVien sv = new SinhVien(sinhVienTemp[0],sinhVienTemp[1],sinhVienTemp[2],sinhVienTemp[3]);
                
               listSinhVien.add(sv);            
            }
            
           SinhVien sv = new SinhVien(txtMSSV.getText(),txtHoTen.getText(),txtHoTen.getText(),txtCMND.getText());
           
           listSinhVien.add(sv);

            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                }
              
              
              
              try {
      File fileghi = new File("");
        
        
     //Bước 1: Tạo đối tượng luồng và liên kết nguồn dữ liệu
     File f = new File(currentDirectory);
     FileWriter fw = new FileWriter(f);
     //Bước 2: Ghi dữ liệu
     
    listSinhVien.forEach((element) -> {
        String dulieusinhvien = element.getmSSV()+"|"+element.getHoTen()+"|"+element.getGioiTinh()+"|"+element.getcMND()+"\n";
          try {
              fw.write(dulieusinhvien);
          } catch (IOException ex) {
              Logger.getLogger(formDanhSachSinhVien.class.getName()).log(Level.SEVERE, null, ex);
          }
        });

    
    
     //Bước 3: Đóng luồng
     fw.close();
   } catch (IOException ex) {
     System.out.println("Loi ghi file: " + ex);
 }
        
        LoadDuLieuSinHVien(columnNames, cmdLopMonHoc.getSelectedItem().toString());
        
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        
        int check = tbSinhVienMonHoc.getSelectedRowCount();
        
        if(check==0)
        {
            return;
        }
        
         List<SinhVien> listSinhVien = new ArrayList<SinhVien>();
        File file = new File("");
        String currentDirectory = file.getAbsolutePath();
        currentDirectory +="\\Data\\DuLieu\\DanhSachLopHocMopHoc\\" + cmdLopMonHoc.getSelectedItem().toString()+".txt";
        System.out.println("Current working directory : " + currentDirectory);
  BufferedReader br = null;
              try {   
            br = new BufferedReader(new FileReader(currentDirectory));       

            System.out.println("Đọc nội dung file sử dụng phương thức readLine()");

            String textInALine;
           
         
            
            while ((textInALine = br.readLine()) != null) {           
                
               
                
                String[] sinhVienTemp = textInALine.split("\\|");
                
               SinhVien sv = new SinhVien(sinhVienTemp[0],sinhVienTemp[1],sinhVienTemp[2],sinhVienTemp[3]);
                
               listSinhVien.add(sv);            
            }
            
           

            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                }
              
              
              
              try {
      File fileghi = new File("");
        
        
     //Bước 1: Tạo đối tượng luồng và liên kết nguồn dữ liệu
     File f = new File(currentDirectory);
     FileWriter fw = new FileWriter(f);
     //Bước 2: Ghi dữ liệu
    
     
     for(int i=0;i<listSinhVien.size();i++)
     {
      if(listSinhVien.get(i).getmSSV().equals(tbSinhVienMonHoc.getValueAt(tbSinhVienMonHoc.getSelectedRow(), 1).toString()))
      {
          listSinhVien.remove(i);
          break;
      }
     }
     
     
     for(int i=0;i<listSinhVien.size();i++)
     {
         if(listSinhVien.get(i).getmSSV().equals(""))
         {
             continue;
         }
         String dulieusinhvien = listSinhVien.get(i).getmSSV()+"|"+listSinhVien.get(i).getHoTen()+"|"+listSinhVien.get(i).getGioiTinh()+"|"+listSinhVien.get(i).getcMND()+"\n";
            try {
                fw.write(dulieusinhvien);
            } catch (IOException ex) {
                Logger.getLogger(formDanhSachSinhVien.class.getName()).log(Level.SEVERE, null, ex);
            }
              
     }
     
    

    
    
     //Bước 3: Đóng luồng
     fw.close();
   } catch (IOException ex) {
     System.out.println("Loi ghi file: " + ex);
 }
        
        LoadDuLieuSinHVien(columnNames, cmdLopMonHoc.getSelectedItem().toString());
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbSinhVienMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSinhVienMonHocMouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_tbSinhVienMonHocMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDanhSachLopHocMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDanhSachLopHocMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDanhSachLopHocMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDanhSachLopHocMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDanhSachLopHocMonHoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cmdLopMonHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTable tbSinhVienMonHoc;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMSSV;
    // End of variables declaration//GEN-END:variables
}
