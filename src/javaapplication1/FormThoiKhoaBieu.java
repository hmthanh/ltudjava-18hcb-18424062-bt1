/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.FileDialog;
import java.awt.Frame;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaapplication1.Entities.MonHoc;
import javaapplication1.Entities.SinhVien;
import javaapplication1.Extension.TxtFileNameFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Asus
 */
public class FormThoiKhoaBieu extends javax.swing.JFrame {

    /**
     * Creates new form FormThoiKhoaBieu
     */
    public FormThoiKhoaBieu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImportCSV = new javax.swing.JButton();
        cmbLopHoc = new javax.swing.JComboBox<>();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbThoiKhoaBieu = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnImportCSV.setText("Inport CSV");
        btnImportCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportCSVActionPerformed(evt);
            }
        });

        cmbLopHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLopHocActionPerformed(evt);
            }
        });

        tbThoiKhoaBieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbThoiKhoaBieu);

        scrollPane1.add(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(cmbLopHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(btnImportCSV)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImportCSV)
                    .addComponent(cmbLopHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String[] columnNames = { "STT", "Mã môn học","Tên môn học", "Phòng học" };

    void LoadDuLieuMonHoc(String[] columnNames,String lophoc)
    {
         File file = new File("");
        String currentDirectory = file.getAbsolutePath();
          
        currentDirectory +="\\Data\\DuLieu\\DanhSachThoiKhoaBieu\\" + lophoc+".txt";
        Path pathToFile = Paths.get(currentDirectory);
        
         List<MonHoc> listMonHoc = new ArrayList<MonHoc>();
        
        String tenKhoaBieu="";
        // create an instance of BufferedReader
        // using try with resource, Java 7 feature to close resources
        
        try (BufferedReader br = Files.newBufferedReader(pathToFile, StandardCharsets.UTF_8)) 
        {

            // read the first line from the text file
            String line = br.readLine();                                         
            while (line != null) 
            {              
                
                // use string.split to load a string array with the values from
                // each line of
                // the file, using a comma as the delimiter
                String[] attributes = line.split("\\|");
                MonHoc monhoc = new MonHoc();
                 monhoc = monhoc.ThemMonHoc(attributes);

                // adding book into ArrayList
                listMonHoc.add(monhoc);

                // read next line before looping
                // if end of file reached, line would be null
                line = br.readLine();
            }
            
            
            // loop until all lines are read
            
            br.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            
        }
        
        
        String[][] listDataMonHoc = new String[listMonHoc.size()][5];
        for(int i =0;i<listMonHoc.size();i++)
        {
              listDataMonHoc[i][0] = (i+1) + "";
              listDataMonHoc[i][1] =  listMonHoc.get(i).getMaMonHoc();
              listDataMonHoc[i][2] =  listMonHoc.get(i).getTenMonHoc();
              listDataMonHoc[i][3] =  listMonHoc.get(i).getPhongHoc();
             
        }
        
        
        
        TableModel tablemodel = new DefaultTableModel(listDataMonHoc, columnNames);
        tbThoiKhoaBieu.setModel(tablemodel);
        
    
    }
    
    List<MonHoc> GhiDanhSachMonHoc()
    {
        File file = new File("");
        String currentDirectory = file.getAbsolutePath();
          
        currentDirectory +="\\Data\\DuLieu\\DanhSachMonHoc\\"+"MonHoc.txt";
        Path pathToFile = Paths.get(currentDirectory);
        
         List<MonHoc> listMonHoc = new ArrayList<MonHoc>();
        
        String tenKhoaBieu="";
        // create an instance of BufferedReader
        // using try with resource, Java 7 feature to close resources
        
        try (BufferedReader br = Files.newBufferedReader(pathToFile, StandardCharsets.UTF_8)) 
        {

            // read the first line from the text file
            String line = br.readLine();                                         
            while (line != null) 
            {              
                
                // use string.split to load a string array with the values from
                // each line of
                // the file, using a comma as the delimiter
                String[] attributes = line.split("\\|");
                if(attributes.length<2)
                {
                    return null;
                }
                MonHoc monhoc = new MonHoc();
                monhoc.setPhongHoc(0+"");
                 monhoc = monhoc.ThemMonHoc(attributes);

                // adding book into ArrayList
                listMonHoc.add(monhoc);

                // read next line before looping
                // if end of file reached, line would be null
                line = br.readLine();
            }
            
            
            // loop until all lines are read
            
            br.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            
        }
        
        return listMonHoc;
        
        
        
    }
    
    
    private void btnImportCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportCSVActionPerformed
        // TODO add your handling code here:
        FileDialog dialog = new FileDialog((Frame)null, "Select File to Open");        
         dialog.setFile("*.CSV");

        dialog.setMode(FileDialog.LOAD);
        dialog.setVisible(true);
        String file = dialog.getFile();
        System.out.println(file + " chosen.");
         System.out.println(dialog.getDirectory() + " chosen.");

         String fileCSV = dialog.getDirectory()+file;
     File ff = new File(fileCSV);
        if(!ff.exists())
        {
            return;
        }

     
      List<MonHoc> listMonHoc = new ArrayList<MonHoc>();
        Path pathToFile = Paths.get(fileCSV);
       
        // create an instance of BufferedReader
        // using try with resource, Java 7 feature to close resources
        
        try (BufferedReader br = Files.newBufferedReader(pathToFile, StandardCharsets.UTF_8)) 
        {

            // read the first line from the text file
            String line = br.readLine();                                         
            while (line != null) 
            {
                
                
                
                // use string.split to load a string array with the values from
                // each line of
                // the file, using a comma as the delimiter
                String[] attributes = line.split(",");
                MonHoc monhoc = new MonHoc();
                 monhoc = monhoc.ThemMonHoc(attributes);

                // adding book into ArrayList
                listMonHoc.add(monhoc);

                // read next line before looping
                // if end of file reached, line would be null
               line = br.readLine();
            }
            
            
            // loop until all lines are read
            
            br.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            
        }
        
         
         
         
        //Luu danh sach mon hoc nếu không có thì thêm vào file
         List<MonHoc> listMonHocs = GhiDanhSachMonHoc();
 
        List<MonHoc> listMonHocGhi = new ArrayList<MonHoc>();
        if(listMonHocs.size()>0)
        {
           
            
            for(MonHoc mh:listMonHoc)
            {
                 int ktMonhoc =1;                
                for(MonHoc mhs :listMonHocs)
                {
                    String mS= mh.getTenMonHoc();
                    String mSs = mhs.getTenMonHoc();
                    if(mS.equals(mSs) )
                    {
                        ktMonhoc =0;
                        break;
                    }
                }
                if(ktMonhoc==1)
                {
                    listMonHocGhi.add(mh);
                }
            }
                                              
        }
        else
        {
            for(MonHoc mh :listMonHoc)
            {
                listMonHocGhi.add(mh);
            }
        }
        
        //ghi vao thời khóa biểu
        try {
      File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\DuLieu\\DanhSachThoiKhoaBieu\\" +cmbLopHoc.getSelectedItem().toString()+".txt";
     //Bước 1: Tạo đối tượng luồng và liên kết nguồn dữ liệu
     File f = new File(currentDirectory);
     FileWriter fw = new FileWriter(f);
     //Bước 2: Ghi dữ liệu
     
    listMonHoc.forEach((element) -> {
        String dulieumonhoc = element.getMaMonHoc()+"|"+element.getTenMonHoc()+"|"+element.getPhongHoc()+"\n";
          try {
              fw.write(dulieumonhoc);
          } catch (IOException ex) {
              Logger.getLogger(formDanhSachSinhVien.class.getName()).log(Level.SEVERE, null, ex);
          }
        });

    
    
     //Bước 3: Đóng luồng
     fw.close();
   } catch (IOException ex) {
     System.out.println("Loi ghi file: " + ex);
 }
        
        
        
        
        // Ghi Vào danh sách môn học

        try {
      File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\DuLieu\\DanhSachMonHoc\\" +"MonHoc.txt";
     //Bước 1: Tạo đối tượng luồng và liên kết nguồn dữ liệu
     File f = new File(currentDirectory);
     FileWriter fw = new FileWriter(f,true);
     //Bước 2: Ghi dữ liệu
     
    listMonHocGhi.forEach((element) -> {
        String dulieumonhoc = element.getMaMonHoc()+"|"+element.getTenMonHoc()+"|"+element.getPhongHoc()+"\n";
          try {
              fw.write(dulieumonhoc);
          } catch (IOException ex) {
              Logger.getLogger(formDanhSachSinhVien.class.getName()).log(Level.SEVERE, null, ex);
          }
        });

    
    
     //Bước 3: Đóng luồng
     fw.close();
   } catch (IOException ex) {
     System.out.println("Loi ghi file: " + ex);
 }
        
        
         
         
         
       // Ghi danh sách sinh viên vào lớp học
       
       
       
       
       List<SinhVien> listSinhVien = new  ArrayList<SinhVien>();
       
       for(MonHoc mh : listMonHoc)
       {
            SinhVien sv = new SinhVien();
       listSinhVien = sv.getAllSinhVien(cmbLopHoc.getSelectedItem().toString());
       
       
        try {
      File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\DuLieu\\DanhSachLopHocMopHoc\\" + cmbLopHoc.getSelectedItem().toString()+"-"+mh.getTenMonHoc()+".txt";
     //Bước 1: Tạo đối tượng luồng và liên kết nguồn dữ liệu
     File f = new File(currentDirectory);
     FileWriter fw = new FileWriter(f);
     //Bước 2: Ghi dữ liệu
     
    listSinhVien.forEach((element) -> {
        String dulieusinhvien = element.getmSSV()+"|"+element.getHoTen()+"|"+element.getGioiTinh()+"|"+element.getcMND()+"\n";
          try {
              fw.write(dulieusinhvien);
          } catch (IOException ex) {
              Logger.getLogger(formDanhSachSinhVien.class.getName()).log(Level.SEVERE, null, ex);
          }
        });

    
    
            //Bước 3: Đóng luồng
            fw.close();
          } catch (IOException ex) {
            System.out.println("Loi ghi file: " + ex);
        }
       }
       
       
      
         
        LoadDuLieuMonHoc(columnNames, cmbLopHoc.getSelectedItem().toString());
         
        
    }//GEN-LAST:event_btnImportCSVActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        HienThiDanhSachLopLenCombobox();
        LoadDuLieuMonHoc(columnNames, cmbLopHoc.getSelectedItem().toString());
    }//GEN-LAST:event_formWindowOpened

    private void cmbLopHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLopHocActionPerformed
        // TODO add your handling code here:
         LoadDuLieuMonHoc(columnNames, cmbLopHoc.getSelectedItem().toString());
    }//GEN-LAST:event_cmbLopHocActionPerformed

    
    
     void  HienThiDanhSachLopLenCombobox()
    {
        
         File fileghi = new File("");
        String currentDirectory = fileghi.getAbsolutePath();
        currentDirectory +="\\Data\\Dulieu\\DanhSachSinhVien";
        File dir = new File(currentDirectory);
 
        File[] txtFiles = dir.listFiles(new TxtFileNameFilter());
 
        for (File txtFile : txtFiles) {
             File f = new File(txtFile.getAbsolutePath());
             
            cmbLopHoc.addItem(f.getName().toString().replace(".txt", ""));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormThoiKhoaBieu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImportCSV;
    private javax.swing.JComboBox<String> cmbLopHoc;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTable tbThoiKhoaBieu;
    // End of variables declaration//GEN-END:variables
}
